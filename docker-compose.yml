services:
  services:
  kong-database:
    image: postgres:latest
    container_name: kong-database
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    ports:
      - "5432:5432"
    volumes:
      - kong-data:/var/lib/postgresql/data

  kong-migrations:
    image: kong:3.6
    depends_on:
      - kong-database
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PASSWORD: kongadmin
    command: kong migrations bootstrap

  kong:
    image: kong:3.6
    depends_on:
      - kong-migrations
    ports:
      - "8000:8000"     # Proxy (HTTP)
      - "8443:8443"     # Proxy (HTTPS)
      - "8001:8001"     # Admin API (HTTP)
      - "8444:8444"     # Admin API (HTTPS)
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"

  # Optional: Kong Admin UI (Konga)
  konga:
    image: pantsel/konga:latest
    container_name: konga
    depends_on:
      - kong
    ports:
      - "1337:1337"
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_PORT: 5432
      DB_USER: kong
      DB_PASSWORD: kong
      DB_DATABASE: kong
    restart: always

  volumes:
    kong-data:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
  
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    ports:
      - "9092:9092"

  telemetry-db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: telemetry
    ports:
      - "5432:5432"
  telemetry-producer:
    build: ./services/telemetry/producer
    container_name: telemetry_producer
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
      - telemetry-db
    ports:
      - "5005:5005"

  telemetry-consumer:
    build: ./services/telemetry/consumer
    container_name: telemetry_consumer
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
      - telemetry-db
    ports:
      - "5006:5006"
  user:
    build: ./services/users
    container_name: user
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
    ports:
      - "5000:5000"
  notification:
    build: ./services/notifications
    container_name: notification
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
    ports:
      - "5001:5001"

  dev-logger:
    build: ./services/dev_logger
    container_name: dev_logger
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
    ports:
      - "5002:5002"

  storage:
    build: ./services/storage
    container_name: storage
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
    ports:
      - "5003:5003"
  
  ai-server:
    build: ./services/ai
    container_name: ai_server
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - HF_HOME=/tmp/hf_cache
      - TRANSFORMERS_CACHE=/tmp/hf_cache
    depends_on:
      - kafka
      - tf-serving
    ports:
      - "5004:5004"

  tf-serving:
    image: tensorflow/serving:latest-gpu
    container_name: tf_serving
    ports:
      - "8501:8501"
    volumes:
      - ./models:/models
    environment:
      - MODEL_NAME=codebert_regression_model
